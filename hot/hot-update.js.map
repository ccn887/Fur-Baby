{"version":3,"sources":["webpack:///./client/components/PageMaker.js"],"names":["PageMaker","props","state","uploadedFiles","console","log","currFurId","match","params","furbabyId","pageid","pageId","imageobj","fbs","Pages","images","pageidarr","Object","keys","textDecoration","files","addImage","map","page","original_filename","secure_url","mapState","scrapbook","furbabies","mapDispatch","addAlbum","getUser"],"mappings":"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","file":"hot/hot-update.js","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router'\nimport Dropzone from 'react-dropzone';\nimport { addAlbum, addImage, getUser } from '../reducer/';\nimport { NavLink } from 'react-router-dom';\n\n\nexport class PageMaker extends Component{\n  constructor(props) {\n    super(props)\n    this.state = {\n      uploadedFiles: false\n    };\n  }\n    render() {\nconsole.log('props?', this.props)\nconst props = this.props\nconst currFurId =  props.match.params.furbabyId\nconst pageid = props.match.params.pageId\nconst imageobj = (props.fbs[currFurId].Pages[pageid]? props.fbs[currFurId].Pages[pageid].images : null)\nconst pageidarr = (imageobj ? Object.keys(props.fbs[currFurId].Pages[pageid].images) : [])\nconsole.log('pageid', pageid)\n      return (\n    <div className='app'>\n        <div className='wrapper'>\n          <h1>Scrapbook Time!</h1>\n          <NavLink to={`/pagemaker/${currFurId }`} style={{ textDecoration: 'none' }}>Make a new page</NavLink>\n          <Dropzone\n          multiple={true}\n          accept=\"image/*\"\n          onDrop={(files) => props.addImage(files[0], 'd53bod1b', currFurId, pageid)}>\n          <p>Drop an image or click to select a file to upload.</p>\n        </Dropzone>\n\n          <Dropzone\n            multiple={true}\n            accept=\"image/*\"\n            onDrop={(files) => props.addImage(files[0], 'jwsfhasx', currFurId, pageid)}>\n            <p>Drop an image or click to select a file to upload with a black and white filter.</p>\n          </Dropzone>\n\n          <Dropzone\n            multiple={true}\n            accept=\"image/*\"\n            onDrop={(files) => props.addImage(files[0], 'a3tpor8y', currFurId, pageid)}>\n            <p>Drop an image or click to select a file to upload with a cartoon filter.</p>\n          </Dropzone>\n\n        <div>\n      <div className=\"FileUpload\">\n      {\n        <div>\n          {pageidarr === [] ? null : pageidarr.map(page => {\n            return(\n          <div key={page}>\n            <p>{imageobj[page].original_filename\n            }</p>\n            <img src={imageobj[page].secure_url} />\n          </div>\n          )})}\n        </div>\n        }\n      </div>\n      </div>\n\n    </div>\n</div> )\n}\n}\n\nconst mapState = (state) => {\n  return {\n    scrapbook: state.scrapbook,\n    fbs: state.furbabies\n  }\n}\nconst mapDispatch = { addAlbum, addImage, getUser };\n\nexport default withRouter(connect(mapState, mapDispatch)(PageMaker))\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/PageMaker.js"],"sourceRoot":""}