{"version":3,"sources":["webpack:///./client/components/ScrapbookPage.js"],"names":["ScrapbookPage","props","state","showForm","handleSubmit","bind","setState","imageid","event","preventDefault","pageid","match","params","pageId","currFurId","furbabyId","target","id","value","console","log","caption","date","title","addCaption","nextpage","pageidarrtest","fbs","Pages","images","pageidarr","Object","keys","map","imageobj","image","page","secure_url","hideFunction","renderNewCaption","textDecoration","mapState","scrapbook","furbabies","mapDispatch","addImage","getUser"],"mappings":"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","file":"hot/hot-update.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router'\nimport { addCaption, addImage, getUser } from '../reducer/';\nimport { NavLink } from 'react-router-dom';\n\n\nexport class ScrapbookPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showForm: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n  hideFunction() {\n    this.state.showForm ?\n      this.setState({ showForm: false }) : this.setState({ showForm: true })\n  }\n\n  renderNewCaption(imageid) {\n    return (\n      <section id=\"caption\" >\n        <div className=\"caption\">\n          <form onSubmit={this.handleSubmit}>\n            <div >\n              <h2 >\n                <input\n                  name=\"date\"\n                  type=\"date\"\n                  className=\"form-like\"\n                />\n              </h2>\n              <h1 >\n                <input\n                  name=\"title\"\n                  type=\"text\"\n                  placeholder=\"Photo Title\"\n                  className=\"form-like\"\n                />\n              </h1>\n              <h2 >\n                <input\n                  name=\"caption\"\n                  type=\"text\"\n                  placeholder=\"Your Caption Here\"\n                  className=\"form-like\"\n                />\n              </h2>\n              <input\n                name=\"id\"\n                readOnly\n                value={imageid}\n                className=\"form-like\"\n              />\n              <div >\n                <button id=\"submit\"\n                  type=\"submit\">Save Caption</button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </section>\n    )\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const props = this.props\n    const pageid = props.match.params.pageId\n    const currFurId = props.match.params.furbabyId\n    const imageid = event.target.id.value\n    console.log('imageid:', imageid)\n    const caption = {\n      date: event.target.date.value,\n      title: event.target.title.value,\n      caption: event.target.caption.value,\n    };\n    this.props.addCaption(currFurId, pageid, imageid, caption);\n    event.target.date.value = null;\n    event.target.title.value = '';\n    event.target.caption.value = '';\n    this.setState({\n      showForm: false\n    })\n  }\n\n\n  render() {\n    const props = this.props\n    const currFurId = props.match.params.furbabyId\n    const nextpage = currFurId + 1\n    const pageid = props.match.params.pageId\n    const pageidarrtest = props.fbs[currFurId].Pages[pageid].images\n    let pageidarr;\n    typeof pageidarrtest !== 'object' ? pageidarr = null :\n      pageidarr = Object.keys(pageidarrtest)\n    return (\n      <div className='app'>\n        <div className='drop-wrapper'>\n\n\n          {\n            <div className='drop-wrapper'>\n              {pageidarr === [] ? null : pageidarr.map(page => {\n                const imageobj = props.fbs[currFurId].Pages[pageid].images\n                const image = imageobj[page].secure_url\n                return (\n                  <div key={page} >\n                    {imageobj[page].caption ? (\n                      <div className=\"caption\">\n                        <img src={image} />\n                        <h1> {imageobj[page].caption.title}</h1>\n                        <h2 className=\"special\"> {imageobj[page].caption.caption}</h2>\n                        <p> {imageobj[page].caption.date}</p>\n                      </div>) : (\n                        <div>\n                          <img src={image} />\n                          <button id=\"submit\" onClick={() => this.hideFunction()}>Add Caption</button>\n                          {this.state.showForm ? this.renderNewCaption(page) : null}</div>)}\n                  </div>\n                )\n              })}\n            </div>\n          }\n          </div>\n          <NavLink to={`/pagemaker/${currFurId}/page/${pageid}`} style={{ textDecoration: 'none' }}> Add more photos!</NavLink>\n          <NavLink to={`/scrapbook/${currFurId}`} style={{ textDecoration: 'none' }}> Take me bark to my scrapbook index !</NavLink>\n\n      </div>)\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    scrapbook: state.scrapbook,\n    fbs: state.furbabies\n  }\n}\nconst mapDispatch = { addCaption, addImage, getUser };\n\nexport default withRouter(connect(mapState, mapDispatch)(ScrapbookPage))\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/ScrapbookPage.js"],"sourceRoot":""}