{"version":3,"sources":["webpack:///./client/components/PageMaker.js"],"names":["PageMaker","props","state","uploadedFiles","console","log","currFurId","match","params","furbabyId","pageid","pageId","pageArr","Object","keys","fbs","Pages","pageidarrtest","images","pageidarr","fbName","files","addImage","textDecoration","map","imageobj","page","original_filename","secure_url","mapState","scrapbook","furbabies","mapDispatch","addAlbum","getUser"],"mappings":"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","file":"hot/hot-update.js","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router'\nimport Dropzone from 'react-dropzone';\nimport { addAlbum, addImage, getUser } from '../reducer/';\nimport { NavLink } from 'react-router-dom';\n\n\nexport class PageMaker extends Component{\n  constructor(props) {\n    super(props)\n    this.state = {\n      uploadedFiles: false\n    };\n  }\n    render() {\nconsole.log('props?', this.props)\nconst props = this.props\nconst currFurId =  props.match.params.furbabyId\nconst pageid = props.match.params.pageId\nconst pageArr = Object.keys(props.fbs[currFurId].Pages)\nconst pageidarrtest = props.fbs[currFurId].Pages[pageid].images\nlet pageidarr;\ntypeof pageidarrtest !== 'object' ? pageidarr = null :\n pageidarr = Object.keys(pageidarrtest)\n\n\n\nconsole.log('pageidarr', pageidarr)\n      return (\n    <div className='app'>\n\n          <h1 className=\"big-text\">Let's Get Scrapbooking! Upload Some Photos for {props.fbs[currFurId].fbName}'s New Page </h1>\n          <div className='drop-wrapper'>\n          <Dropzone\n          multiple={true}\n          accept=\"image/*\"\n          onDrop={(files) => props.addImage(files[0], 'd53bod1b', currFurId, pageid)}>\n          <p className=\"med-text\">Drop an image or click to select a file to upload.</p>\n        </Dropzone>\n\n          <Dropzone\n            multiple={true}\n            accept=\"image/*\"\n            onDrop={(files) => props.addImage(files[0], 'jwsfhasx', currFurId, pageid)}>\n            <p className=\"med-text\">Drop an image or click to select a file to upload with a black and white filter.</p>\n          </Dropzone>\n\n          <Dropzone\n            multiple={true}\n            accept=\"image/*\"\n            onDrop={(files) => props.addImage(files[0], 'a3tpor8y', currFurId, pageid)}>\n            <p className=\"med-text\">Drop an image or click to select a file to upload with a cartoon filter.</p>\n          </Dropzone>\n          </div>\n        <div>\n      <div className=\"FileUpload\">\n      <NavLink to={`/scrapbook/${currFurId }/page/${pageid}`} style={{ textDecoration: 'none' }}>Done! Take me to the new page!</NavLink>\n      {\n        <div>\n          {pageidarr === null ? null : pageidarr.map(page => {\n            const imageobj =  props.fbs[currFurId].Pages[pageid].images;\n            return(\n          <div key={page}>\n            <p>{imageobj[page].original_filename\n            }</p>\n            <img src={imageobj[page].secure_url} />\n          </div>\n          )})}\n        </div>\n        }\n      </div>\n      </div>\n\n\n</div> )\n}\n}\n\nconst mapState = (state) => {\n  return {\n    scrapbook: state.scrapbook,\n    fbs: state.furbabies\n  }\n}\nconst mapDispatch = { addAlbum, addImage, getUser };\n\nexport default withRouter(connect(mapState, mapDispatch)(PageMaker))\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/PageMaker.js"],"sourceRoot":""}