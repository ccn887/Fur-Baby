{"version":3,"sources":["webpack:///./client/components/PageMaker.js"],"names":["PageMaker","props","state","uploadedFiles","console","log","scrapbookArr","Object","keys","scrapbook","currFurId","match","params","furbabyId","pageArr","fbs","Pages","pageid","length","pageidarr","images","imageobj","textDecoration","files","addImage","map","page","original_filename","secure_url","mapState","furbabies","mapDispatch","addAlbum","getUser"],"mappings":"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","file":"hot/hot-update.js","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router'\nimport Dropzone from 'react-dropzone';\nimport { addAlbum, addImage, getUser } from '../reducer/';\nimport { NavLink } from 'react-router-dom';\n\n\nexport class PageMaker extends Component{\n  constructor(props) {\n    super(props)\n    this.state = {\n      uploadedFiles: false\n    };\n  }\n    render() {\nconsole.log('props?', this.props)\nconst props = this.props\nconst scrapbookArr = Object.keys(props.scrapbook)\nconst currFurId =  props.match.params.furbabyId\nconst pageArr = (props.fbs[currFurId].Pages ? Object.keys(props.fbs[currFurId].Pages) : [])\nconst pageid = (pageArr.length ? pageArr.length : 0)\nconst pageidarr = (pageArr.length ? Object.keys(props.fbs[currFurId].Pages[pageid - 1].images) : [])\nconst imageobj = (pageArr.length ? props.fbs[currFurId].Pages[pageid - 1].images : {})\n\nconsole.log('pageidarr', pageidarr)\nconsole.log('pageArr:', pageArr)\n      return (\n    <div className='app'>\n        <div className='wrapper'>\n          <h1>Scrapbook Time!</h1>\n          <NavLink to={`/pagemaker/${currFurId }`} style={{ textDecoration: 'none' }}>Make a new page</NavLink>\n          <Dropzone\n          multiple={true}\n          accept=\"image/*\"\n          onDrop={(files) => props.addImage(files[0], 'd53bod1b', currFurId, pageid)}>\n          <p>Drop an image or click to select a file to upload.</p>\n        </Dropzone>\n\n          <Dropzone\n            multiple={true}\n            accept=\"image/*\"\n            onDrop={(files) => props.addImage(files[0], 'jwsfhasx', currFurId, pageid)}>\n            <p>Drop an image or click to select a file to upload with a black and white filter.</p>\n          </Dropzone>\n\n          <Dropzone\n            multiple={true}\n            accept=\"image/*\"\n            onDrop={(files) => props.addImage(files[0], 'a3tpor8y', currFurId, pageid)}>\n            <p>Drop an image or click to select a file to upload with a cartoon filter.</p>\n          </Dropzone>\n\n        <div>\n      <div className=\"FileUpload\">\n      {\n        <div>\n          {pageidarr === [] ? null : pageidarr.map(page => {\n            return(\n          <div key={page}>\n            <p>{imageobj[page].original_filename\n            }</p>\n            <img src={imageobj[page].secure_url} />\n          </div>\n          )})}\n        </div>\n        }\n      </div>\n      </div>\n\n    </div>\n</div> )\n}\n}\n\nconst mapState = (state) => {\n  return {\n    scrapbook: state.scrapbook,\n    fbs: state.furbabies\n  }\n}\nconst mapDispatch = { addAlbum, addImage, getUser };\n\nexport default withRouter(connect(mapState, mapDispatch)(PageMaker))\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/PageMaker.js"],"sourceRoot":""}